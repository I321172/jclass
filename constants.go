package class

// These constants represent the possible (valid)
// values for the tag attribute in a constant pool
// entry. Based on this tag, the structure of the
// following bytes can be determined.
// http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.4-140
const (
	CONSTANT_UTF8               ConstInfoTag = 1
	CONSTANT_Integer                         = 3
	CONSTANT_Float                           = 4
	CONSTANT_Long                            = 5
	CONSTANT_Double                          = 6
	CONSTANT_Class                           = 7
	CONSTANT_String                          = 8
	CONSTANT_FieldRef                        = 9
	CONSTANT_MethodRef                       = 10
	CONSTANT_InterfaceMethodRef              = 11
	CONSTANT_NameAndType                     = 12
	CONSTANT_MethodHandle                    = 15
	CONSTANT_MethodType                      = 16
	CONSTANT_InvokeDynamic                   = 18
)

// These constants describe access flags that can
// be applied to a whole class or interface.
// http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.1-200-E.1
const (
	CLASS_ACC_PUBLIC     AccessFlags = 0x0001 // Declared public; may be accessed from outside its package.
	CLASS_ACC_FINAL                  = 0x0010 // Declared final; no subclasses allowed.
	CLASS_ACC_SUPER                  = 0x0020 // Treat superclass methods specially when invoked by the invokespecial instruction.
	CLASS_ACC_INTERFACE              = 0x0200 // Is an interface, not a class.
	CLASS_ACC_ABSTRACT               = 0x0400 // Declared abstract; must not be instantiated.
	CLASS_ACC_SYNTHETIC              = 0x1000 // Declared synthetic; not present in the source code.
	CLASS_ACC_ANNOTATION             = 0x2000 // Declared as an annotation type.
	CLASS_ACC_ENUM                   = 0x4000 // Declared as an enum type.
)

// These constant define access flags and attributes
// of a field in a class or interface.
// http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.5-200-A.1
const (
	FIELD_ACC_PUBLIC    AccessFlags = 0x0001 // Declared public; may be accessed from outside its package.
	FIELD_ACC_PRIVATE               = 0x0002 // Declared private; usable only within the defining class.
	FIELD_ACC_PROTECTED             = 0x0004 // Declared protected; may be accessed within subclasses.
	FIELD_ACC_STATIC                = 0x0008 // Declared static.
	FIELD_ACC_FINAL                 = 0x0010 // Declared final; never directly assigned to after object construction (JLS ยง17.5).
	FIELD_ACC_VOLATILE              = 0x0040 // Declared volatile; cannot be cached.
	FIELD_ACC_TRANSIENT             = 0x0080 // Declared transient; not written or read by a persistent object manager.
	FIELD_ACC_SYNTHETIC             = 0x1000 // Declared synthetic; not present in the source code.
	FIELD_ACC_ENUM                  = 0x4000 // Declared as an element of an enum.
)

// These constants describe access flags and properties
// of methods in a class or interface.
// http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.6-200-A.1
const (
	METHOD_ACC_PUBLIC       AccessFlags = 0x0001 // Declared public; may be accessed from outside its package.
	METHOD_ACC_PRIVATE                  = 0x0002 // Declared private; accessible only within the defining class.
	METHOD_ACC_PROTECTED                = 0x0004 // Declared protected; may be accessed within subclasses.
	METHOD_ACC_STATIC                   = 0x0008 // Declared static.
	METHOD_ACC_FINAL                    = 0x0010 // Declared final; must not be overridden (ยง5.4.5).
	METHOD_ACC_SYNCHRONIZED             = 0x0020 // Declared synchronized; invocation is wrapped by a monitor use.
	METHOD_ACC_BRIDGE                   = 0x0040 // A bridge method, generated by the compiler.
	METHOD_ACC_VARARGS                  = 0x0080 // Declared with variable number of arguments.
	METHOD_ACC_NATIVE                   = 0x0100 // Declared native; implemented in a language other than Java.
	METHOD_ACC_ABSTRACT                 = 0x0400 // Declared abstract; no implementation is provided.
	METHOD_ACC_STRICT                   = 0x0800 // Declared strictfp; floating-point mode is FP-strict.
	METHOD_ACC_SYNTHETIC                = 0x1000 // Declared synthetic; not present in the source code.
)

// These constants define valid access flags and properties
// for inner classes of a class or interface.
// http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.7.6-300-D.2-5
const (
	NESTED_CLASS_ACC_PUBLIC     AccessFlags = 0x0001 // Marked or implicitly public in source.
	NESTED_CLASS_ACC_PRIVATE                = 0x0002 // Marked private in source.
	NESTED_CLASS_ACC_PROTECTED              = 0x0004 // Marked protected in source.
	NESTED_CLASS_ACC_STATIC                 = 0x0008 // Marked or implicitly static in source.
	NESTED_CLASS_ACC_FINAL                  = 0x0010 // Marked final in source.
	NESTED_CLASS_ACC_INTERFACE              = 0x0200 // Was an interface in source.
	NESTED_CLASS_ACC_ABSTRACT               = 0x0400 // Marked or implicitly abstract in source.
	NESTED_CLASS_ACC_SYNTHETIC              = 0x1000 // Declared synthetic; not present in the source code.
	NESTED_CLASS_ACC_ANNOTATION             = 0x2000 // Declared as an annotation type.
	NESTED_CLASS_ACC_ENUM                   = 0x4000 // Declared as an enum type.
)

const (
	UnknownTag AttributeType = iota
	ConstantValueTag
	CodeTag
	StackMapTableTag
	ExceptionsTag
	InnerClassesTag
	EnclosingMethodTag
	SyntheticTag
	SignatureTag
	SourceFileTag
	SourceDebugExtensionTag
	LineNumberTableTag
	LocalVariableTableTag
	LocalVariableTypeTableTag
	DeprecatedTag
	RuntimeVisibleAnnotationsTag
	RuntimeInvisibleAnnotationsTag
	RuntimeVisibleParameterAnnotationsTag
	RuntimeInvisibleParameterAnnotationsTag
	AnnotationDefaultTag
	BootstrapMethodsTag
)
